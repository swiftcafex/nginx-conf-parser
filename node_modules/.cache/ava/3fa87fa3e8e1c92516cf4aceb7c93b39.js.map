{"version":3,"sources":["test-conf-parser.js"],"names":["fs","require","exmaplePath","t","Promise","resolve","parseFile","pass","inStream","createReadStream","extractLines","lines","is","length","line","indexOf"],"mappings":"AAAA;;AAEA;;;;AACA;;;;;;AAEA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;;AAEA,MAAMC,cAAc,6BAApB;AACA,mBAAK,mBAAL,EAA0B,MAAMC,CAAN,IAAW;AACpC,OAAO,YAAY;AAClB,SAAO,IAAIC,OAAJ,CAAYC,WAAW;AAC7B,wBAAWC,SAAX,CAAqBJ,WAArB,EAAkC,MAAM;AACvCG;AACA,IAFD;AAGA,GAJM,CAAP;AAKA,EAND;AAOAF,GAAEI,IAAF;AACA,CATD;;AAWA,mBAAK,eAAL,EAAsB,MAAMJ,CAAN,IAAW;AAChC,OAAMK,WAAWR,GAAGS,gBAAH,CAAoBP,WAApB,CAAjB;;AAEA,OAAO,YAAY;AAClB,SAAO,IAAIE,OAAJ,CAAYC,WAAW;AAC7B,wBAAWK,YAAX,CAAwBF,QAAxB,EAAkCG,SAAS;AAC1CR,MAAES,EAAF,CAAKD,MAAME,MAAX,EAAmB,EAAnB,EAD0C,CAClB;;AAExB;AACA,SAAK,MAAMC,IAAX,IAAmBH,KAAnB,EAA0B;AACzBR,OAAES,EAAF,CAAKE,KAAKC,OAAL,CAAa,GAAb,CAAL,EAAwB,CAAC,CAAzB;AACA;;AAEDV;AACA,IATD;AAUA,GAXM,CAAP;AAYA,EAbK,EAAN;AAcAF,GAAEI,IAAF;AACA,CAlBD","file":"test-conf-parser.js","sourcesContent":["'use strict';\n\nimport test from 'ava';\nimport confParser from '../conf-parser';\n\nconst fs = require('fs');\n\nconst exmaplePath = './test/support/example.conf';\ntest('parse config file', async t => {\n\tawait (function () {\n\t\treturn new Promise(resolve => {\n\t\t\tconfParser.parseFile(exmaplePath, () => {\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t});\n\tt.pass();\n});\n\ntest('extract lines', async t => {\n\tconst inStream = fs.createReadStream(exmaplePath);\n\n\tawait (function () {\n\t\treturn new Promise(resolve => {\n\t\t\tconfParser.extractLines(inStream, lines => {\n\t\t\t\tt.is(lines.length, 70);\t// The number of lines must be 70, same as the oroginal file /test/support/example.conf\n\n\t\t\t\t// Comments must be stripped after extract.\n\t\t\t\tfor (const line of lines) {\n\t\t\t\t\tt.is(line.indexOf('#'), -1);\n\t\t\t\t}\n\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t})();\n\tt.pass();\n});\n"]}